{
    "openapi": "3.0.0",
    "info": {
        "title": "Cherie Blossom API",
        "version": "1.0.0"
    },
    "paths": {
        "/api": {},
        "/api/user/register": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Register new user & get token",
                "operationId": "register",
                "requestBody": {
                    "description": "Request body description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "example": {
                                "name": "Augusta Ada Byron",
                                "email": "ada.lovelace@gmail.com",
                                "password": "Ba88a935",
                                "password_confirmation": "Ba88a935"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Log in to existing user & get token",
                "operationId": "login",
                "requestBody": {
                    "description": "Request body description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "example": {
                                "email": "ada.lovelace@gmail.com",
                                "password": "Ba88a935"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/user/logout": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Log out & destroy self token",
                "operationId": "logout",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "User Email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport_token_ready": [],
                        "passport": []
                    }
                ]
            }
        },
        "/api/bouquets": {
            "get": {
                "tags": [
                    "Bouquets"
                ],
                "summary": "Get all bouquets",
                "operationId": "2d49f4724542ef9eaf36b0ace7d625d0",
                "responses": {
                    "200": {
                        "description": "List of bouquets"
                    }
                }
            },
            "post": {
                "tags": [
                    "Bouquets"
                ],
                "summary": "Create a new bouquet",
                "operationId": "7de0f3bc754fa30d87bcb0c93a390d26",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "number"
                                    },
                                    "image": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Bouquet created"
                    }
                }
            }
        },
        "/api/bouquets/{id}": {
            "get": {
                "tags": [
                    "Bouquets"
                ],
                "summary": "Get bouquet by ID",
                "operationId": "51cac19a2a5c904e0ee80c6d219bed1a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bouquet data"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Bouquets"
                ],
                "summary": "Update bouquet by ID",
                "operationId": "cd339c71fc046a9c782c3c9f2ead0df5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "number"
                                    },
                                    "image": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bouquet updated"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bouquets"
                ],
                "summary": "Remove the specified item",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of item that needs to be removed",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "204": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Neshia Hilton"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "neshia@mail.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "rahasia123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "rahasia123"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-06-17T14:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-06-17T14:00:00Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "passport_token_ready": {
                "type": "http",
                "scheme": "bearer",
                "description": "Enter token in format without \"Bearer \"",
                "name": "Authorization",
                "in": "header"
            },
            "passport2": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security",
                "scheme": "https",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://localhost/oauth/authorize",
                        "tokenUrl": "http://localhost/oauth/token",
                        "refreshUrl": "http://localhost/token/refresh",
                        "scopes": []
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "user",
            "description": "user"
        },
        {
            "name": "Bouquets",
            "description": "Bouquets"
        }
    ]
}